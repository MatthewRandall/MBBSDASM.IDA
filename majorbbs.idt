;DECLARATION
;ALIGNMENT 2
;Module Name and Description
0	Name=MAJORBBS.dll
;---------------------------------------
1	Name=__READ \
	Comment=int _CType _FARFUNC __read (int fd, void *buf, unsigned int len);
2	Name=__SIGNALPTR \
	Comment=extern _CatcherPTR (*__SignalPtr)();
3	Name=__WRITE \
	Comment=int _CType _FARFUNC __write(int fd, const void *buf, unsigned int len);
4	Name=_C_EXIT \
	Comment=void _c_exit(void);
5	Name=_CEXIT \
	Comment=void _cexit(void);
6	Name=_CHECKNULL \
	Comment=void _checknull( void );
7	Name=_CHMOD \
	Comment=int _chmod(const char *filename, int func [,int attrib]);
8	Name=_CLEANUP \
	Comment=void _cleanup( void );
9	Name=_CLOSE \
	Comment=int _RTLENTRYF _EXPFUNC _close (int fd);
10	Name=_CREAT \
	Comment=int _CType _FARFUNC _creat (const char *pathP, int attr);
11	Name=_CTYPE \
	Comment=unsigned char __cdecl _ctype[257];
12	Name=_DOS_GETFILEATTR \
	Comment=unsigned _dos_getfileattr(const char *filename, unsigned *attrib);
13	Name=_DOS_SETFILEATTR \
	Comment=unsigned _dos_setfileattr(const char *filename, unsigned attrib);
14	Name=_DOSERROR \
	Comment=int pascal __DOSerror (int dosErr);
15	Name=_EXIT \
	Comment=void _exit(int status);
16	Name=_EXITBUF \
	Comment=void (*_exitbuf)(void);
17	Name=_EXITFOPEN \
	Comment=void (*_exitfopen)(void)
18	Name=_EXITOPEN \
	Comment=void (*_exitopen)(void)
19	Name=_FGETC \
	Comment=int _fgetc(FILE *stream);
20	Name=_FPUTC \
	Comment=int _fputc(int ch, FILE *stream);
21	Name=_FPUTN \
	Comment=size_t  pascal __fputn(const void *ptr, register size_t n, FILE *fp);
22	Name=_GETFP \
	Comment=FILE  * pascal near __getfp  (void);
24	Name=_IOERROR \
	Comment=int pascal __IOerror (int dosErr);
25	Name=_ISDST \
	Comment= int  pascal __isDST (unsigned hour,  unsigned yday, unsigned month, unsigned year);
26	Name=_LONGTOA \
	Comment=char *pascal __longtoa (long value, char *strP, int radix, char maybeSigned, char hexStyle);
27	Name=_MKNAME \
	Comment=char * pascal near __mkname(char *__s, char *__pfx, unsigned __num);
28	Name=_MMODEL \
	Comment=__MMODEL dw MMODEL
29	Name=_NFGETC \
	Comment=asm __Nfgetc    label near
30	Name=_NUNGETC \
	Comment=asm __Nungetch  label near
31	Name=_OPEN \
	Comment=int _CType _FARFUNC _open(const char *filename, int oflag);
32	Name=__OPENFP \
	Comment=FILE  * pascal near __openfp(FILE *__fp, const char *__fname, const char *__type, int __shflag);
33	Name=_READ \
	Comment=int _read(int handle, void *buf, unsigned nbyte);
34	Name=_REALCVT \
	Comment= void _realcvt (double *valueP, int ndec, char *strP, char formCh, char altFormat);
35	Name=_RESTOREZERO \
	Comment=void _restorezero(void);
36	Name=_SCANNER \
	Comment=int  _scanner ( int   (*Get)(void *srceP), void  (*UnGet) (int ch, void *srceP), void   *srceP, const char   *formP, va_list varPP )
37	Name=_SCANPOP \
	Comment=void _scanpop(void);
38	Name=_SCANRSLT \
	Comment=void _scanrslt(void far *rsltP, int rsltType);
40	Name=_SCANTOL \
	Comment=long _scanttol(int (*Get)(void *srceP), void (*UnGet)(int ch, void *srceP), void *srceP, int radix, int width, int *countP, int *statusP )
41	Name=_SETUPIO \
	Comment=void near _setupio(void);
42	Name=_STPCPY \
	Comment=char *stpcpy(char *destin, const char *source)
43	Name=_STREAMS \
	Comment=FILE _streams[_NFILE_]
44	Name=_TERMINATE \
	Comment=void Terminate (void);
45	Name=_TMPNAM \
	Comment=char  * pascal near __tmpnam (char *__s, unsigned *__numP);
46	Name=_UTOA \
	Comment=char *__utoa(unsigned value, char *buf);
47	Name=_VPRINTER \
	Comment=int __vprinter (putnF  *putter, void   *outP, const _TCHAR *formP, int __use_nsize, size_t __nsize, va_list *argP)
48	Name=_WRITE \
	Comment=int _CType _FARFUNC _write(int fd, const void *buf, unsigned len);
49	Name=_XFCLOSE \
	Comment=void _xfclose(void);
50	Name=_XFFLUSH \
	Comment=void _xfflush(void);
51	Name=AABBTV \
	Comment=int aabbtv (void *recptr, long abspos, int keynum);
52	Name=ABORT \
	Comment=void abort(void);
53	Name=ABSBTV \
	Comment=long absbtv (void);
54	Name=ACCACCT \
	Comment=void accacct(struct usracc *accptr,int plusor);
55	Name=ACCBB \
	Comment=BTVFILE *accbb;
56	Name=ACCTMP \
	Comment=struct usracc acctmp;
57	Name=ACTVSCN \
	Comment=char *actvscn(int scnhdl);
58	Name=ACTVSCNSP \
	Comment=char *actvscnsp(int scnhdl,int x1,int y1,int x2,int y2,int scr);
59	Name=ADDCRD \
	Comment=int addcrd(char *keyuid,char *tckstg,int real);
60	Name=ADDKYU \
	Comment=int addkyu(char *keyptr,int update);
61	Name=ADDRES1 \
	Comment=char *addres1;
62	Name=ADDRES2 \
	Comment=char *addres2;
63	Name=ADDXRF \
	Comment=void addxrf(char *newuid)
64	Name=ALCDUP \
	Comment=char *alcdup(char *stg);
65	Name=ALCMEM \
	Comment=char *alcmem(unsigned size);
66	Name=ALCRSZ \
	Comment=char *alcrsz(void *mptr,unsigned oldsize,unsigned newsize);
67	Name=ALCVDA \
	Comment=void alcvda(void);
68	Name=ALCZER \
	Comment=char *alczer(unsigned nbytes);
69	Name=ALLDGS \
	Comment=int alldgs(char *string);
70	Name=ANPBTV \
	Comment=int anpbtv (void *recptr, int anpopt);
71	Name=ANSION \
	Comment=void ansion(int on);
72	Name=ANSSTG \
	Comment=char *ansstg[];
73	Name=APPLYEM \
	Comment=void applyem(char *filename);
74	Name=ASKTBL \
	Comment=int asktbl[][3];
75	Name=ATEXIT \
	Comment=int atexit(atexit_t func);
76	Name=ATOI \
	Comment=int atoi (const char *str);
77	Name=ATOL \
	Comment=long int atol(const char *str);
78	Name=AUDBB \
	Comment=BTVFILE *audbb;
79	Name=AUXCRT \
	Comment=char *scnstt=auxcrt();
80	Name=AUXHDL \
	Comment=int auxhdl;
81	Name=BACKHDL \
	Comment=int backhdl;
82	Name=BAUDAT \
	Comment=int baudat(unsigned baud,int blink);
83	Name=BBSTTL \
	Comment=char *bbsttl;
84	Name=BDSPEC \
	Comment=int bdspec(void);
85	Name=BEGIN_POLLING \
	Comment=void begin_polling(int unum,void (*rouptr)());
86	Name=BELPER \
	Comment=void belper(int pitch)
87	Name=BGNCNC \
	Comment=void bgncnc();
88	Name=OLDBGNEDT \
	Comment=int oldbgnedt();
89	Name=BGNLOF \
	Comment=void bgnlof(void);
90	Name=BOOTEM \
	Comment=void bootem(char *who);
91	Name=BYENOW \
	Comment=void byenow(int msgnum, TYPE p1, TYPE p2,...,pn);
92	Name=CALCRC \
	Comment=int calcrc(int crc,char byt);
93	Name=CATAEXIT \
	Comment=void cataexit(void);
94	Name=CATASTRO \
	Comment=catastro(char * ctlstg, TYPE pl, TYPE p2,...,pn)
95	Name=CATFIX1 \
	Comment=char *catfix1(void);
96	Name=CATFIX2 \
	Comment=char *catfix2(void);
97	Name=CHANNEL \
	Comment=int *channel;
98	Name=CHGHOUR \
	Comment=char *chghour;
99	Name=CHGMIN \
	Comment=char *chgmin;
100	Name=CHIMOVE \
	Comment=void chimove(char *src,char *dst,register int cnt);
101	Name=CHISET \
	Comment=void chiset(char *dst,int cnt,char val);
102	Name=CHKDFT \
	Comment=void chkdft(char c);
103	Name=CHNEMD \
	Comment=int chnemd;
104	Name=CHOOSE \
	Comment=int choose(int n,char *chcs[],int upx,int upy,int lox,int loy,int escok);
105	Name=CHOOUT \
	Comment=int choout(void);
106	Name=CHOOWD \
	Comment=int choowd(char *chcs[],int fc,int upx,int upy,int lox,int loy,int escok);
107	Name=CHROPT \
	Comment=char ch=chropt(int msgnum);
108	Name=CLFILE \
	Comment=void clfile(void);
109	Name=CLOCK \
	Comment=clock_t clock(void);
110	Name=CLOSE \
	Comment=int close(int handle);
111	Name=CLREOL \
	Comment=void clreol();
112	Name=CLRINP \
	Comment=void clrinp(void);
113	Name=CLRPRF \
	Comment=clrprf()
114	Name=CLRXRF \
	Comment=void clrxrf(void);
115	Name=CLS \
	Comment=void cls(char *buf,int atr);
116	Name=CLSBB \
	Comment=BTVFILE *clsbb;
117	Name=CLSBTV \
	Comment=void clsbtv (struct btvblk *bbp);
118	Name=CLSHEAD \
	Comment=struct clstab *clshead;
119	Name=CLSMSG \
	Comment=void clsmsg(FILE *mbkprt);
120	Name=CLSPTR \
	Comment=struct clstab *clsptr;
121	Name=CNCALL \
	Comment=char *cncall(void);
122	Name=CNCCHR \
	Comment=char ch=cncchr();
124	Name=CNCHEX \
	Comment=int cnchex(void);
125	Name=CNCINT \
	Comment=int n=cncint();
126	Name=CNCLON \
	Comment=long ln=cnclon();
127	Name=CNCNUM \
	Comment=char *cncnum(void);
128	Name=CNCSIG \
	Comment=char *signam=cncsig();
129	Name=CNCUID \
	Comment=char *uid=cncuid();
130	Name=CNCWRD \
	Comment=char *wrd=cncwrd();
131	Name=CNCYESNO \
	Comment=int yesno=cncyesno();
132	Name=CNTDIR \
	Comment=void cntdir(char *path);
133	Name=CNTRBTV \
	Comment=long cntrbtv (void);
134	Name=COFDAT \
	Comment=int count=cofdat(int date);
135	Name=COLOR \
	Comment=int color;
136	Name=COMPANY \
	Comment=char *company;
137	Name=CONDEX \
	Comment=void condex();
138	Name=CORELEFT \
	Comment=unsigned coreleft(void);
139	Name=CPUTYPE \
	Comment=int cpu=cputype();
140	Name=CPYKEY \
	Comment=void cpykey(char *dest,char *src,int len);
141	Name=CRDUSR \
	Comment=int crdusr(char *keyuid,char *tckstg,int real,int affall);
142	Name=CREATNEW \
	Comment=int creatnew(char *filename, int attrib);
143	Name=CREATTEMP \
	Comment=int creattemp(const char *filename, int attrib);
144	Name=CRTBTV \
	Comment=void crtbtv (char *filnam, void *databuf, int lendbuf, int keyno);
145	Name=CRTCLASS \
	Comment=int crtclass(struct acclass *cptr);
146	Name=CURCURS \
	Comment=int curcurs(void);
147	Name=CURCURX \
	Comment=int curcurx();
148	Name=CURCURY \
	Comment=int curcury();
149	Name=CURSACT \
	Comment=void cursact(int moveit);
150	Name=CURSIZ \
	Comment=void cursiz(int howbig);
151	Name=CURUSR \
	Comment=void curusr(int newunum);
152	Name=CVTSCN \
	Comment=char *cvtscn(void *where);
153	Name=DATAPH \
	Comment=char *dataph;
154	Name=DATOFC \
	Comment=int date=datofc(int count);
155	Name=DAYTODAY \
	Comment=int daytoday(void);
156	Name=DBYTES \
	Comment=char *dbytes(long bytes);
157	Name=DCDATE \
	Comment=int date=dcdate(char *ascdat);
158	Name=DCLVDA \
	Comment=void dclvda(int nbytes);
159	Name=DCTIME \
	Comment=int dctime(char *timstr);
160	Name=DEDCRD \
	Comment=int enuf=dedcrd(long amount, int asmuch);
161	Name=DELACCT \
	Comment=int delacct(char *userid);
162	Name=DELBTV \
	Comment=void delbtv();
163	Name=DELXRF \
	Comment=void delxrf(char *userid);
164	Name=DEPAD \
	Comment=int nremoved=depad(char *string);
165	Name=DFLTASCN \
	Comment=int dfltascn;
166	Name=DFLTMSCN \
	Comment=int dfltmscn;
167	Name=DFSTHN \
	Comment=void dfsthn();
168	Name=DFTBEL \
	Comment=void dftbel(int local);
169	Name=DIGALW \
	Comment=int digalw;
170	Name=DINSBTV \
	Comment=int dinsbtv (void *recptr);
171	Name=DISPAG \
	Comment=void dispag(char *pagnam);
172	Name=DLTCLS \
	Comment=void dltcls(struct clstab *tabptr);
173	Name=DOSTOUNIX \
	Comment=long dostounix(struct date *d, struct time *t);
174	Name=DSAIRP \
	Comment=dsairp()
175	Name=DSKFRE \
	Comment=long dskfre(int drive);
176	Name=DSPCHC \
	Comment=void dspchc(void);
177	Name=DSPMNU \
	Comment=int dspmnu(int lngmnu);
178	Name=DSPMSG \
	Comment=void dspmsg(msgno,parm1,parm2,parm3);
179	Name=DTRACK \
	Comment=unsigned dtrack;
180	Name=DUPDBTV \
	Comment=int dupdbtv (void *recptr);
181	Name=ECHON \
	Comment=echon();
182	Name=ECHONU \
	Comment=void echonu(int usrnum);
183	Name=EDTCHC \
	Comment=int edtchc(int sx,int sy,char *sval,char *chcs[],int flags);
184	Name=OLDEDTIMR \
	Comment=void oldedtimr(int (*imradr)());
185	Name=EDTVAL \
	Comment=int edtval(int sx,int sy,int maxlen,char *sval,int (*valrou)(),int flags);
186	Name=EMLSDROU \
	Comment=void (*emlsdrou)();
187	Name=EMUBEL \
	Comment=int emubel;
188	Name=EMUCHN \
	Comment=void emuchn(int chn2em);
189	Name=ENAIRP \
	Comment=void enairp()
190	Name=ENAPAG \
	Comment=void enapag(char *pagnam);
191	Name=ENDCNC \
	Comment=int done=endcnc();
192	Name=EOF \
	Comment=int eof(int handle);
193	Name=ERRCOD \
	Comment=int errcod;
194	Name=EURMSK \
	Comment=char eurmsk;
195	Name=EXIMOD \
	Comment=jmp_buf eximod;
196	Name=EXIT \
	Comment=void ___exit(int quick, int dontexit, int errcode);
197	Name=EXPAND \
	Comment=void * _expand(void *block, size_t size);
198	Name=EXPLODE \
	Comment=void explode(char *sctptr,int wulx,int wuly,int wlrx,int wlry);
199	Name=EXPLODELL \
	Comment=
200	Name=EXPLODETO \
	Comment=void explodeto(char *sptr,int fux,int fuy,int flx,int fly,int tux,int tuy);
201	Name=FARCORELEFT \
	Comment=long farcoreleft(void);
202	Name=FARFREE \
	Comment=void farfree(void *p);
203	Name=FARMALLOC \
	Comment=char *farmalloc(unsigned long size);
204	Name=FARREALLOC \
	Comment=void far * _farreallocf (void far *block, unsigned long size, unsigned flags);
205	Name=FCLOSE \
	Comment=int fclose(FILE* stream );
206	Name=FDOPEN \
	Comment=FILE *fdopen(int handle, char *type);
207	Name=FFLUSH \
	Comment=int fflush(FILE *stream);
208	Name=_FGETC \
	Comment=int fgetc (FILE *stream );
209	Name=FGETCHAR \
	Comment=int fgetchar(void);
210	Name=FGETS \
	Comment=char* fgets(char* str, int num, FILE* stream );
211	Name=FILELENGTH \
	Comment=long filelength(int handle);
212	Name=FILEUP \
	Comment=void fileup(char *fname, char *prot, int (*fuphdl)(int fupcod));
213	Name=FINDMOD \
	Comment=int findmod(char *name);
214	Name=FINDSTG \
	Comment=int findstg(char *stg, char *body);
215	Name=FINDTVAR \
	Comment=int findtvar(char *name);
216	Name=FLDNMI \
	Comment=char * fldnmi(int fldi);
217	Name=FLL1ST \
	Comment=int fll1st(struct fllblk *flp, char *prefix, char *list);
218	Name=FLLNXT \
	Comment=int fllnxt(struct fllblk *flp);
219	Name=FLLSPC \
	Comment=
220	Name=FLUSHALL \
	Comment=int flushall(void);
221	Name=FMTX3 \
	Comment=int fmtx3(char *prmstg);
222	Name=FNDCLS \
	Comment=struct clstab *fndcls(char *clsname);
224	Name=FNDKEY \
	Comment=int fndkey(char *lock,char *keylist,int remove);
225	Name=F_OPEN \
	Comment=file* fopen(const char* filename, USE);
226	Name=F_PRINTF \
	Comment=int fprintf ( FILE * stream, const char * format, ... );
227	Name=F_PUTC \
	Comment=int fputc(int character, FILE *stream );
228	Name=F_PUTCHAR \
	Comment=int putchar ( int character );
229	Name=F_READ \
	Comment=size_t fread(void* ptr, size_t size, size_t count, FILE* stream );
230	Name=GALFREE \
	Comment=void galfree(void *block);
231	Name=FRZSEG \
	Comment=char *frzseg(void);
232	Name=FSCANF \
	Comment=int fscanf(FILE *stream, const char *format[, argument,...]);
233	Name=FSDANS \
	Comment=void fsdans(char *oldans);
234	Name=FSDAPR \
	Comment=void fsdapr(char *sesbuf, int sbleng, char *answers)
235	Name=FSDBD1 \
	Comment=void fsdbd1(char *answers);
236	Name=FSDBDF \
	Comment=void fsdbdf(int fldno);
237	Name=FSDBDN \
	Comment=void fsdbdn(char *name, char *value);
238	Name=FSDBKG \
	Comment=void fsdbkg(char *templt);
239	Name=FSDDAN \
	Comment=void fsddan();
240	Name=FSDDSP \
	Comment=void fsddsp(char *templt);
241	Name=FSDEGO \
	Comment=void fsdego(int (*fldvfy)(int fldno, char *answer), void (*whndun)(int save));
242	Name=FSDEMG \
	Comment=char fsdemg[];
243	Name=FSDENT \
	Comment=void fsdent(int inifld);
244	Name=FSDFXT \
	Comment=char *stg=fsdfxt(int fldno, char *buffer, int maxlen);
245	Name=FSDINC \
	Comment=void fsdinc(int c);
246	Name=FSDINI \
	Comment=void fsdini();
247	Name=FSDLIN \
	Comment=void fsdlin();
248	Name=FSDMAN \
	Comment=void fsdman(char *ansstg);
249	Name=FSDNAN \
	Comment=char *stg=fsdnan(int fldno);
250	Name=FSDNFY \
	Comment=void fsdnfy();
251	Name=FSDOBA \
	Comment=int fsdoba();
252	Name=FSDORD \
	Comment=int fsdord(int fldi);
253	Name=FSDOUC \
	Comment=void fsdouc(char c);
254	Name=FSDOUS \
	Comment=void fsddous(char *str);
255	Name=FSDPAN \
	Comment=void fsdpan(char *answer, char *name, char *value);
256	Name=FSDPPC \
	Comment=int fsdppc(char *templt, int ascn);
257	Name=FSDPRC \
	Comment=int fsdprc(void)
258	Name=FSDQDP \
	Comment=void fsdqdp(void);
259	Name=FSDQOE \
	Comment=void fsdqoe(void);
260	Name=FSDRFT \
	Comment=char *fsdrft(void);
261	Name=FSDROOM \
	Comment=int fsdroom(int tmpmsg, char *fldspc, int amode);
262	Name=FSDSAN \
	Comment=int fsdsan(int fldi, char *value);
263	Name=FSDSCB \
	Comment=void inifsdscb(void);
264	Name=FSDUSR \
	Comment=struct fsdbbs *fsdusr;
265	Name=FSDXAN \
	Comment=char *fsdxan(char *answer, char *name)
266	Name=FSEEK \
	Comment=int fseek ( FILE * stream, long int offset, int origin );
267	Name=FTELL \
	Comment=long int ftell(FILE *stream );
268	Name=FTFABT \
	Comment=void ftfabt(char *why);
269	Name=FTFAHD \
	Comment=void ftfahd(int nstate, int ticks);
270	Name=FTFBUF \
	Comment=char *ftfbuf;
271	Name=FTFCAN \
	Comment=void ftfcan(void);
272	Name=FTFCLI \
	Comment=void ftfcli(void);
273	Name=FTFCLO \
	Comment=void ftfclo(void);
274	Name=FTFNEW \
	Comment=void ftfnew(int nstate);
275	Name=FTFNWP \
	Comment=void ftfnwp(void);
276	Name=FTFOBA \
	Comment=int ftfoba(void);
277	Name=FTFOUS \
	Comment=void ftfous(char *string);
278	Name=FTFOUT \
	Comment=void ftfout(char *data, int nbytes);
279	Name=FTFRCA \
	Comment=void ftfrca(void);
280	Name=FTFRCL \
	Comment=void ftfrcl(int ok);
281	Name=FTFREX \
	Comment=int ftfrex(void);
282	Name=FTFROP \
	Comment=int ftfrop(int append, int ascii, int resume);
283	Name=FTFRRD \
	Comment=int ftfrrd(char *datbuf, int nbytes);
284	Name=FTFRSK \
	Comment=void ftfrsk(long pos);
285	Name=FTFRSQ \
	Comment=void ftfrsq(char *reason);
286	Name=FTFRWB \
	Comment=int ftfrwb(char ch);
287	Name=FTFRWR \
	Comment=int ftfrwr(char *data, int nbytes);
288	Name=FTFSCB \
	Comment=struct ftfscb {...};
289	Name=FTFSRT \
	Comment=void ftfsrt(void);
290	Name=FTFSTF \
	Comment=void ftfstf(void);
291	Name=FTFXCA \
	Comment=void ftfxca(void);
292	Name=FTFXCL \
	Comment=void ftfxcl(int ok);
293	Name=FTFXLK \
	Comment=void ftfxlk(int on);
294	Name=FTFXOP \
	Comment=int ftfxop(void);
295	Name=FTFXRB \
	Comment=int ftfxrb(void);
296	Name=FTFXRD \
	Comment=int ftfxrd(char *datbuf, int nbytes);
297	Name=FTFXRL \
	Comment=int ftfxrl(char *datbuf, int nbytes);
298	Name=FTFXSK \
	Comment=void ftfxsk(long pos);
299	Name=FTFXSQ \
	Comment=void ftfxsq(char *reason);
300	Name=FTFZAD \
	Comment=int ftfzad(char c);
301	Name=FTGDNL \
	Comment=void ftgdnl(char *prot, void (*retrou)(void));
302	Name=FTGNEW \
	Comment=int ftgnew(void);
303	Name=FTGNUM \
	Comment=int ftgnum(void);
304	Name=FTGPTR \
	Comment=struct ftg *ftgptr;
305	Name=FTGSBM \
	Comment=int ftgsbm(char *prot)
306	Name=FTGSHO \
	Comment=void ftgsho(void);
307	Name=FTGUSR \
	Comment=struct ftg *ftgusr;
308	Name=FTPLOG \
	Comment=void ftplog(struct ftfpsp *ftp);
309	Name=FTPLOGH \
	Comment=void ftplogh(struct ftfpsp *ftp);
310	Name=FTUPTR \
	Comment=struct ftuser *ftuptr;
311	Name=FUPKIL \
	Comment=void fupkil(void);
312	Name=FWRITE \
	Comment=size_t fwrite ( const void * ptr, size_t size, size_t count, FILE * stream );
313	Name=GABBTV \
	Comment=void garbbtv(char *recptr, long abspos, intkeynum);
314	Name=GEN_HASKEY \
	Comment=int ok=gen_haskey(char *lock, int unum, struct user *uptr);
315	Name=GENRDN \
	Comment=int genrdn(int min,int max);
316	Name=GETASC \
	Comment=char *bufadr=getasc(int msgnum);
317	Name=GETBTV \
	Comment=void getbtv(char *recptr, char *key, int keynum, int getopt);
318	Name=GETCH \
	Comment=int getch(void);
319	Name=GETCHC \
	Comment=int getchc(void);
320	Name=GETDATE \
	Comment=void getdate(struct date *dateblk);
321	Name=GETDTD \
	Comment=long timendate=getdtd(int handle);
322	Name=GETENV \
	Comment=char* getenv(const char* name);
324	Name=GETIN \
	Comment=char *getin(void);
325	Name=GETLST \
	Comment=int getlst(char *uid,char *buffer);
326	Name=GETMSG \
	Comment=char *bufard=getmsg(msgnum);
327	Name=GETTIME \
	Comment=void gettime(struct time *timep);
328	Name=GETTND \
	Comment=long gmt70=gettnd(int handle);
329	Name=GIVKEY \
	Comment=int givkey(char *uid,char *keylist);
330	Name=GLOBALCMD \
	Comment=void globalcmd(ing (*rouptr)());
331	Name=GMDNAM \
	Comment=char *gmdnam(char *mdfnam);
332	Name=GOPAGE \
	Comment=int gopage(char *pagnam,int lngmnu,int reting);
333	Name=GRBTXV \
	Comment=int grbtxv(char *buffer);
334	Name=HASKEY \
	Comment=int haskey(lock);
335	Name=HASMKEY \
	Comment=int ok=hasmkey(int msgnum);
336	Name=HDLCHC \
	Comment=int hdlchc(int c);
337	Name=HDLINP \
	Comment=void hdlinp(void);
338	Name=HDLUID \
	Comment=int hdluid(char *stg);
339	Name=HEXOPT \
	Comment=unsigned hexopt(int msgnum,unsigned floor,unsigned ceiling);
340	Name=HOWBUY \
	Comment=void howbuy(void);
341	Name=HPKROU \
	Comment=int hpkrou(int chan,char c);
342	Name=HUPALL \
	Comment=void hupall(void);
343	Name=IBM2ANS \
	Comment=char *ibm2ans(char attr,char *buff);
344	Name=INIMSG \
	Comment=void inimsg(unsigned maxsiz);
345	Name=INIPRF \
	Comment=void iniprf(char *pbuf,int pfbsiz);
346	Name=INISCN \
	Comment=void iniscn(char *filnam,void *where);
347	Name=INJACR \
	Comment=void injacr();
348	Name=INJOTH \
	Comment=int gotIt=injoth()
349	Name=INPLEN \
	Comment=int inplen;
350	Name=INPUT \
	Comment=char input[];
351	Name=INSBTV \
	Comment=void insbtv(char *recptr);
352	Name=INSTAT \
	Comment=int isin=instat(char *usrid, int qstate);
353	Name=INT86 \
	Comment=int int86(int intr_num, union REGS *inregs, union REGS *outregs);
354	Name=INT86X \
	Comment=int int86x(int intr_num, union REGS *inregs, union REGS *outregs,struct SREGS *segregs);
355	Name=INTDOS \
	Comment=int intdos(union REGS * inregs, union REGS * outregs);
356	Name=INTDOSX \
	Comment=int intdosx(union REGS *inregs, union REGS *outregs, struct SREGS *segregs);
357	Name=INVBTV \
	Comment=void invbtv(char *recptr, int length);
358	Name=IOCTL \
	Comment=int ioctl(int handle, int cmd [, void *argdx, int argcx]);
359	Name=ISATTY \
	Comment=int isatty(int handle);
360	Name=ISFILN \
	Comment=int isfiln(int c,char *stg);
361	Name=ISSELC \
	Comment=int isselc(int c);
362	Name=ISSUPC \
	Comment=int issupc(int c);
363	Name=ISTXVC \
	Comment=int istxvc(int c);
364	Name=ISUIDC \
	Comment=int isuidc(int c);
365	Name=ISUPLO \
	Comment=int isuplo(char *stg);
366	Name=ITOA \
	Comment=char *  itoa ( int value, char * str, int base );
367	Name=KBHIT \
	Comment=int kbhit(void);
368	Name=KEYHIT \
	Comment=unsigned keyhit(unsigned scan);
369	Name=KEYNAM \
	Comment=int keynam(char *keyname);
370	Name=KILCHN \
	Comment=void kilchn(int num);
371	Name=KILCTR \
	Comment=int kilctr;
372	Name=KILETC \
	Comment= void kiletc(char *legend);
373	Name=KILIPG \
	Comment=int killpg;
374	Name=KILOOP \
	Comment=void kiloop(void);
375	Name=KILSRC \
	Comment=int kilsrc;
376	Name=KILUID \
	Comment=int kiluid(char *userid);
377	Name=L2AS \
	Comment=char *l2as(long longin);
378	Name=LASAHDL \
	Comment=int lasahdl;
379	Name=LASCAN \
	Comment=int lascan(void);
380	Name=LASMHDL \
	Comment=int lasmhdl;
381	Name=LASTWD \
	Comment=char *lastwd(char *string);
382	Name=LBLHUE \
	Comment=int lblhue;
383	Name=LDEDCRD \
	Comment=int enuf=ldedcrd(struct useracc *uptr, long amount, int real, int asmuch);
384	Name=LINCST \
	Comment=long lincst(int unum);
385	Name=LINSUSD \
	Comment=int linsusd(void);
386	Name=LISTING \
	Comment=void listing(char *path, void (*whndun)())
387	Name=LIVEPH \
	Comment=char *liveph;
388	Name=LLNBTV \
	Comment=int llnbtv (void);
389	Name=LNGOPT \
	Comment=long lngopt(int msgnum,long floor,long ceiling);
390	Name=LNGRND \
	Comment=long lngrnd(long min,long max);
391	Name=LOADKEYS \
	Comment=void loadkeys(char *keyring);
392	Name=LOCATE \
	Comment=void locate(int x, int y);
393	Name=LONGJMP \
	Comment=void longjmp(jmp_buf jmpb, int retval);
394	Name=LONSTF \
	Comment=int lonstf()
395	Name=LOSCAR \
	Comment=void loscar(void);
396	Name=LSEEK \
	Comment=long lseek(int handle, long ofs, int fromwhere);
397	Name=LTOA \
	Comment=char *ltoa(long value, char *strP, int radix);
398	Name=MAINHDL \
	Comment=int mainhdl;
399	Name=MAKHDL \
	Comment=void makhdl(char *stg);
400	Name=GALMALLOC \
	Comment=void * galmalloc(unsigned int size);
401	Name=MARGC \
	Comment=int margc;
402	Name=MARGN \
	Comment=char *margn[];
403	Name=MARGV \
	Comment=char *margv[];
404	Name=MAXTAGS \
	Comment=int maxtags;
405	Name=MDFGETS \
	Comment=char *mdfgets(char *buf,int size,FILE *fp);
406	Name=MDSTATS \
	Comment=struct mdstats *mdstats;
407	Name=MEMCATA \
	Comment=void memcata(void);
408	Name=MEMCMP \
	Comment=int memcmp ( const void * ptr1, const void * ptr2, size_t num );
409	Name=MEMCPY \
	Comment=void* memcpy (void* destination, const void* source,size_t num );
410	Name=MEMMOVE \
	Comment=void memmove(void *dst, const void *scr, unsigned len);
411	Name=MEMSET \
	Comment=void memset(void *ptr, int value, size_t num);
412	Name=MJRMB \
	Comment=FILE *mjrmb;
413	Name=MKDIR \
	Comment=int mkdir(const char *pathname);
414	Name=MMUCRR \
	Comment=int mmucrr;
415	Name=MNUBB \
	Comment=BTVFILE *mnubb;
416	Name=MNUOFF \
	Comment=struct usrmnu *mnuoff(int unum);
417	Name=MODULE \
	Comment=struct module{...} **module;
418	Name=MONORCOL \
	Comment=void monorcol(void);
419	Name=MORCNC \
	Comment=char morcnc(void);
420	Name=MOVMEM \
	Comment=void movmem(char *source, char *destination, unsigned nbytes);
421	Name=MSGSCAN \
	Comment=char *msgscan(char *msgfile,char *vblname);
422	Name=MSGSEEK \
	Comment=unsigned msgseek(int msgnum);
424	Name=MTGBAS \
	Comment=int mtgbas(int base,long min,long max);
425	Name=MTGCHN \
	Comment=int mtgchn(int min,int max);
426	Name=MTGSTG \
	Comment=int mtgstg(int mulwrd,int maxlen);
427	Name=NAMACLS \
	Comment=int namacls(char *clsname);
428	Name=NCDATE \
	Comment=char *ascdat=ncdate(int date);
429	Name=NCEDAT \
	Comment=char *ascdat(int date);
430	Name=NCTIME \
	Comment=char *asctim=nctime(int time);
431	Name=NDEDCRD \
	Comment=int enuf=ndedcrd(char *userid, long amount, int real, int asmuch);
432	Name=NKYREC \
	Comment=void nkyrec(char *uid);
433	Name=NLINIU \
	Comment=int nliniu(void);
434	Name=NMODS \
	Comment=int nmods;
435	Name=NOW \
	Comment=int time=now()
436	Name=NSEXPLOTO \
	Comment=void nsexploto(char *sptr,int fux,int fuy,int flx,int fly,int tux,int tuy);
437	Name=NTERMS \
	Comment=int nterms;
438	Name=NTFYSOPR \
	Comment=void (*ntfysopr)(char *audrec);
439	Name=NUMBYTS \
	Comment=long numbyts;
440	Name=NUMFILS \
	Comment=long numfils;
441	Name=NUMOPT \
	Comment=int numopt(int msgnum,int floor,int ceiling);
442	Name=NXTCMD \
	Comment=char *nxtcmd;
443	Name=NXTLOF \
	Comment=void nxtlof(void);
444	Name=OBTBTV \
	Comment=int obtbtv(char *recptr, char* key, int keynum, int obtopt);
445	Name=ODD \
	Comment=int odd(char byt);
446	Name=ODEDCRD \
	Comment=int enuf=odedcrd(int unum, long amount, int real, int asmuch);
447	Name=OMDBTV \
	Comment=void omdbtv (int mode);
448	Name=ONBBS \
	Comment=int onbbs(char *uid, int invisb);
449	Name=ONSYS \
	Comment=int ison=onsys(char *usrid);
450	Name=ONSYSN \
	Comment=int onsysn(char *uid,int invis);
451	Name=OPEN \
	Comment=int opfile(char *filnam);
452	Name=OPFILE \
	Comment=int opfile(char *filnam);
453	Name=OPINF \
	Comment=struct otrail opinf;
454	Name=OPNANS \
	Comment=int opnans(char *filnam);
455	Name=OPNBTV \
	Comment=BTVFILE *bbptr=opnbtv(char *filnae, int reclen);
456	Name=OPNMSG \
	Comment=FILE *mbkprt=opnmsg(char *fileName)
457	Name=OTHKEY \
	Comment=int othkey(char *lock);
458	Name=OTHUAP \
	Comment=struct usracc *othuaP;
459	Name=OTHUSN \
	Comment=int othusn;
460	Name=OTHUSP \
	Comment=struct user *othusp;
461	Name=OTSTCRD \
	Comment=int enuf=otstcrd(int unum, long amount, int real);
462	Name=OUTBSZ \
	Comment=int outbsz;
463	Name=OUTPRF \
	Comment=outprf (unum);
464	Name=PACCIN \
	Comment=void paccin(void);
465	Name=PACCIT \
	Comment=void paccit(void);
466	Name=PADFLD \
	Comment=void padfld(char *stg,int len);
467	Name=PARSIN \
	Comment=void parsin();
468	Name=PFNLVL \
	Comment=int pfnlvl;
469	Name=PLTILE \
	Comment=int pltile(unsigned long size,int bsel,unsigned stride,unsigned tsize);
470	Name=POWPRF \
	Comment=void powprf(void);
471	Name=PRAT \
	Comment=void prat();
472	Name=PRCRTK \
	Comment=void prcrtk(void);
473	Name=PREPFF \
	Comment=void prepff(void);
474	Name=PRF \
	Comment=prf(string); 
475	Name=PRFBUF \
	Comment=char *prfbuf;
476	Name=PRFMSG \
	Comment=prfmsg(msgnum,p1,p2, ..• ,pn);
477	Name=PRFPTR \
	Comment=char *prfptr;
478	Name=PRFSPD \
	Comment=void prfspd(int delay);
479	Name=PRINTFAT \
	Comment=void printfat();
480	Name=PROFAN \
	Comment=int profan(char *string);
481	Name=PROFF \
	Comment=void proff(int x,int y);
482	Name=PSMATM \
	Comment=void psmatm(void);
483	Name=PUTENV \
	Comment=int putenv(const char *envvar);
484	Name=QNPBTV \
	Comment=int qnpbtv (int getopt);
485	Name=QRYBTV \
	Comment=int is=qrybtv(char *key, int keynum, int qryopt);
486	Name=RAND \
	Comment=int rand (void);
487	Name=RAWMSG \
	Comment=char *bufadr=rawmsg(int msgnum);
488	Name=RDEDCRD \
	Comment=int enuf=dedcrd(long amount, int asmuch);
489	Name=RDFILE \
	Comment=int rdfile(void);
490	Name=REALLOC \
	Comment=void* realloc (void* ptr, size_t size);
491	Name=REDOLOCKS \
	Comment=void redolocks(inserted);
492	Name=REGISTER_MODULE \
	Comment=int register_module(struct module *mod);
493	Name=REGISTER_STASCN \
	Comment=void register_stascn(struct statsc *stascn);
494	Name=REGISTER_TEXTVAR \
	Comment=int register_textvar(char *name,char *(*varrou)());
495	Name=REGSCN \
	Comment=int regscn(struct scrnid *newscn);
496	Name=RENAME \
	Comment=int rename(const char *oldname, const char *newname );
497	Name=REPMEM \
	Comment=void repmem(void *destination, char *pattern, int nbyt);
498	Name=REWIND \
	Comment=void rewind (FILE *fp);
499	Name=RMDIR \
	Comment=int rmdir(const char *pathname);
500	Name=RMVKEY \
	Comment=void rmvkey(char *uid,char *keylist);
501	Name=RMVWHT \
	Comment=void rmvwht(char *string);
502	Name=RSETOP \
	Comment=int rsetop;
503	Name=RSMODE \
	Comment=int rsmode;
504	Name=RSMODES \
	Comment=int *rsmodes;
505	Name=RSTBTV \
	Comment=void rstbtv (void);
506	Name=RSTCHN \
	Comment=void rstchn();
507	Name=RSTCUR \
	Comment=void rstcur(void);
508	Name=RSTLAN \
	Comment=void rstlan(int ishard);
509	Name=RSTLOC \
	Comment=void rstloc(void);
510	Name=RSTMBK \
	Comment=rstmbk();
511	Name=RSTRIN \
	Comment=void rstrin();
512	Name=RSTRXF \
	Comment=void rstrxf();
513	Name=RSTWIN \
	Comment=void rstwin(void);
514	Name=RSTX25 \
	Comment=void rstx25(char *dspstg,char dspc);
515	Name=RTIHDLR \
	Comment=rtihdlr(void (*rouptr)(void));
516	Name=RTKICK \
	Comment=rtkick(int time, void *rouptr());
517	Name=RTSTCRD \
	Comment=int enuf=rtstcrd(long amount);
519	Name=SAFPSW \
	Comment=ing safpsw;
520	Name=SAMEAS \
	Comment=int match=sameas(char *stgl, char* stg2);
521	Name=SAMEIN \
	Comment=int found=samein(char *subs, char *string);
522	Name=SAMETO \
	Comment=int match=sameto(char *shorts, char *longs);
524	Name=SAMPOK \
	Comment=int sampok(void);
525	Name=SAYCRD \
	Comment=int saycrd(char *tckstg,int real);
526	Name=SCBLANK \
	Comment=char *scblank(char *buf,int attrib);
527	Name=SCN2AUX \
	Comment=void scn2aux(int scnhdl);
528	Name=SCN2MAI \
	Comment=void scn2mai(int scnhdl);
529	Name=SCNCOLOR \
	Comment=int scncolor(int attrib);
530	Name=SCNGOAWAY \
	Comment=void scngoaway(int scnhdl);
531	Name=SCNIDS \
	Comment=struct scrnid *scnids
532	Name=SEGREAD \
	Comment=
533	Name=SELNUM \
	Comment=int selnum(char selchr);
534	Name=SETBTV \
	Comment=void setbtv(BTVFILE *bbprt);
535	Name=SETCNF \
	Comment=void setcnf(char *optnam,char *optval);
536	Name=SETCRIT \
	Comment=void setcrit();
537	Name=SETDATE \
	Comment=void setdate(struct date *dateblk);
538	Name=SETDTD \
	Comment=int ok=setdtd(char *fname, int time, int date);
539	Name=SETFSD \
	Comment=void setfsd(int chan)
540	Name=SETFTU \
	Comment=void setftu(void);
541	Name=SETJMP \
	Comment=int setjmp(jmp_buf jmpb);
542	Name=SETKEY \
	Comment=void setkey(char *lock);
543	Name=SETMBK \
	Comment=FILE *setmbk(mbkptr);
544	Name=SETMEM \
	Comment=void setmem(char *destination, unsigned nbytes, char value);
545	Name=SETTIME \
	Comment=int _setTime(LCID locale, LPWIN32TIME Time)
546	Name=SETTND \
	Comment=int ok=settnd(char *fname, long gmt70);
547	Name=SETVBUF \
	Comment=int setvbuf(FILE *stream, char *buf, int type, size_t size);
548	Name=SETWIN \
	Comment=void setwin(void *scn,int xul,int yul,int xlr,int ylr,int sen);
549	Name=SHOCHL \
	Comment=void shochl(char *legend,char sing,int attr);
550	Name=SHOCST \
	Comment=void shocst(char *summary, char *detail, p1, p1,...,pn);
551	Name=SHWCRD \
	Comment=int shwcrd;
552	Name=SHWUSR \
	Comment=void shwusr(struct usracc *usaptr);
553	Name=SKPWHT \
	Comment=char *skpwht(char *string);
554	Name=SKPWRD \
	Comment=char *skpwrd(char *cp);
555	Name=SND2AL \
	Comment=void snd2al(char *text);
556	Name=SND2CH \
	Comment=void snd2ch(int chan,char *text);
557	Name=SOPEN \
	Comment=int sopen(const char *pathname, int access, int shflag[, unsigned permiss] );
558	Name=SORTSTGS \
	Comment=void sortstgs(char *stgs[],int num);
559	Name=SPR \
	Comment=char *sprstg=spr(char *ctlstg, TYPE p1, TYPE p2,...,pn);
560	Name=SPRINTF \
	Comment=int sprintf(char *str, const char *format, ... );
561	Name=SRAND \
	Comment=void srand (unsigned int seed);
562	Name=SSCANF \
	Comment=int sscanf(const char *s, const char *format, ...);
563	Name=SSTATR \
	Comment=void sstatr(int attrib);
564	Name=STANSI \
	Comment=void stansi();
565	Name=STATUS \
	Comment=int status;
566	Name=STGOPT \
	Comment=char *string=stgopt(int msgnum);
567	Name=STIME \
	Comment=int stime(long *tp);
568	Name=STOP_POLLING \
	Comment=void stop_polling(int unum);
569	Name=STPBTV \
	Comment=int stpbtv (void *recptr, int stpopt);
570	Name=STRANSLEN \
	Comment=int stranslen(char *anstg);
571	Name=STRCAT \
	Comment=char *strcat(char *destination, const char *source );
572	Name=STRCHR \
	Comment=char * strchr ( const char * str, int character );
573	Name=STRCMP \
	Comment=int strcmp ( const char * str1, const char * str2 );
574	Name=STRCPY \
	Comment=char* strcpy(char* destination, const char* source );
575	Name=STRDUP \
	Comment=char *strdup(const char *str);
576	Name=STRICMP \
	Comment=int stricmp(const char *string1, const char *string2);
577	Name=STRIPB \
	Comment=void stripb(char *stg);
578	Name=STRLEN \
	Comment=size_t strlen(const char* str);
579	Name=STRLWR \
	Comment=char *lower=strlwr(char *string);
580	Name=STRNCAT \
	Comment=char *strncat(char *destination, const char *source, size_t num );
581	Name=STRNCMP \
	Comment=int strncmp(const char *str1, const char *str2, size_t maxlen);
582	Name=STRNCPY \
	Comment=char *strncpy(char *destination, const char *source, size_t num);
583	Name=STRPLN \
	Comment=int strpln(char *stg);
584	Name=STRSTR \
	Comment=char * strstr(char *str1, const char *str2 );
585	Name=STRTOK \
	Comment=char *strtok(char *str, const char *delimiters );
586	Name=STRTOL \
	Comment=long strtol(const char *strP, char **suffixPP, int radix);
587	Name=STRUPR \
	Comment=char *upper=strlwr(char *string);
588	Name=STTBTV \
	Comment=void sttbtv (int len);
589	Name=STZCPY \
	Comment=stzcpy(char *dest, char *source, int nbytes);
590	Name=SUBVERS \
	Comment=char subvers[SBVSIZ];
591	Name=SUPCHC \
	Comment=void supchc(int n,char *chcs[],int upx,int upy,int lox,int loy,int escok);
592	Name=SUPMB \
	Comment=FILE *supmb;
593	Name=SV \
	Comment=struct sysvbl sv;
594	Name=SV2 \
	Comment=struct sysvb2 sv2;
595	Name=SWTCLS \
	Comment=void swtcls(struct usracc *uacc, int makprm, char *clsnam, int dest, int days);
596	Name=SYSSTG \
	Comment=char *sysstg[];
597	Name=TAGTHS \
	Comment=char * tagths(int (*tshndl)(int tshcod));
598	Name=TELL \
	Comment=long tell(int handle);
599	Name=TIME \
	Comment=time_t time (time_t* timer);
600	Name=TJOINROU \
	Comment=void (*tjoinrou)();
601	Name=TODAY \
	Comment=int date=today();
602	Name=TOKOPT \
	Comment=int index=tokopt(int msgnum, char *token1, chat *token2,....,NULL);
603	Name=TOLOWER \
	Comment=int tolower (int c);
604	Name=TOUPPER \
	Comment=int toupper (int c);
605	Name=TPWIPE \
	Comment=void tpwipe(char *templt, int fldi, int preitems, int postitems);
606	Name=TSHMSG \
	Comment=char tshmsg[TSHLEN+1];
607	Name=TSTCRD \
	Comment=int enuf=tstcrd(long amount);
608	Name=TZSET \
	Comment=void tzset(void);
609	Name=UIDKEY \
	Comment=int uidkey(char *uid,char *lock);
610	Name=UIDXRF \
	Comment=struct uidxrf;
611	Name=UINSYS \
	Comment=int ison=uinsys(char *usrid);
612	Name=UISUSN \
	Comment=int uisusn;
613	Name=ULTOA \
	Comment=char *ultoa(unsigned long value, char *strP, int radix);
614	Name=UNFREZ \
	Comment=void unfrez(void);
615	Name=UNGETC \
	Comment=int ungetc(int character,FILE *stream );
616	Name=UNIXTODOS \
	Comment=void unixtodos(long time, struct date *d, struct time *t);
617	Name=UNLINK \
	Comment=int unlink(const char *filename);
618	Name=UNPAD \
	Comment=char *bufptr=unpad(char *string);
619	Name=UPDACC \
	Comment=void updacc(void);
620	Name=UPDBCKGND \
	Comment=void updbckgnd(void);
621	Name=UPDBTV \
	Comment=void updbtv(char *recptr);
622	Name=UPVBTV \
	Comment=void upvbtv(char *recptr, int length);
624	Name=USAPTR \
	Comment=struct usracc *usaptr;
625	Name=USER \
	Comment=struct user;
626	Name=USRACC \
	Comment=void *usracc;
627	Name=USRIDX \
	Comment=int usridx(int chan);
628	Name=USRNUM \
	Comment=int usrnum;
629	Name=USRPTR \
	Comment=struct user *usrptr;
630	Name=USRSON \
	Comment=void usrson(void);
631	Name=VALDPC \
	Comment=int valdpc(char *prot);
632	Name=VALIDIG \
	Comment=int validig(int c);
633	Name=VALIDYN \
	Comment=int validyn(int c,char *stg);
634	Name=VALPSW \
	Comment=int valpsw(char *psw);
635	Name=VALUPC \
	Comment=int valupc(char *prot);
636	Name=VDAOFF \
	Comment=char *vdaoff(int unum);
637	Name=VDAPTR \
	Comment=char *vdaptr;
638	Name=VDAREA \
	Comment=char *vdarea;
639	Name=VDASIZ \
	Comment=int vdasiz;
640	Name=VDATMP \
	Comment=char *vdatmp;
641	Name=VFYADN \
	Comment=int vfyadn(int fldno, char *answer);
642	Name=VIDALC \
	Comment=void *vidalc(int len);
643	Name=VSPRINTF \
	Comment=int vsprintf(char *s, const char *format, va_list arg);
644	Name=VSSCANF \
	Comment=int vsscanf(const char *string,const char *format, va_list argp);
645	Name=WTWAIT \
	Comment=int wtwait(lomin,himin);
646	Name=XLTCTLS \
	Comment=void xltctls(char *txtbuf);
647	Name=XLTMNU \
	Comment=void xltmnu(char *buffer);
648	Name=XLTTXV \
	Comment=char *xlttxv(char *buffer,int size);
649	Name=XYRTRM \
	Comment=void xyrtrm(char *msg);
650	Name=YNOPT \
	Comment=int ynopt(int msgnum);
651	Name=ZAFILID \
	Comment=int zafilid(char *recbuf);
652	Name=ZONKHL \
	Comment=void zonkhl(char *stg);
653	Name=_DGROUP \
	Comment=
654	Name=F_LDIV \
	Comment=
655	Name=F_LMOD \
	Comment=
656	Name=F_LUDIV \
	Comment=
657	Name=F_LUMOD \
	Comment=
658	Name=F_LXLSH \
	Comment=
659	Name=F_LXMUL \
	Comment=
660	Name=F_LXRSH \
	Comment=
661	Name=F_LXURSH \
	Comment=
662	Name=F_PADD \
	Comment=
663	Name=F_PCMP \
	Comment=
664	Name=F_PSUB \
	Comment=
665	Name=F_SCOPY \
	Comment=
666	Name=LDIV \
	Comment=
667	Name=LMOD \
	Comment=
668	Name=LUDIV \
	Comment=
669	Name=LUMOD \
	Comment=
670	Name=LXLSH \
	Comment=
671	Name=LXMUL \
	Comment=
672	Name=LXRSH \
	Comment=
673	Name=LXURSH \
	Comment=
674	Name=N_LDIV \
	Comment=
675	Name=N_LMOD \
	Comment=
676	Name=N_LUDIV \
	Comment=
677	Name=N_LUMOD \
	Comment=
678	Name=N_LXLSH \
	Comment=
679	Name=N_LXMUL \
	Comment=
680	Name=N_LXRSH \
	Comment=
681	Name=N_LXURSH \
	Comment=
682	Name=N_PADD \
	Comment=
683	Name=N_PCMP \
	Comment=
684	Name=N_PSUB \
	Comment=
685	Name=PADD \
	Comment=
686	Name=PCMP \
	Comment=
687	Name=PSUB \
	Comment=
688	Name=SCOPY \
	Comment=
689	Name=SPMHALLOC \
	Comment=
690	Name=SPMHEXPAND \
	Comment=
691	Name=SPMHFREE \
	Comment=
692	Name=SPMHINIT \
	Comment=
693	Name=SPMHMOVE \
	Comment=
694	Name=FND1ST \
	Comment=int yes=fndlst(struct fndblk &fb, filespec, char attr);
695	Name=FNDNXT \
	Comment=int yes=fndnxt(struct fndblk &fb);
696	Name=FTFPSP \
	Comment=struct ftfpsp {...};
697	Name=DLKEYS \
	Comment=void dlkeys(char *uid);
698	Name=LVCHAT \
	Comment=void lvchat(void);
699	Name=ENTCHT \
	Comment=void entcht(void);
700	Name=RMTSYS \
	Comment=int rmtsys;
701	Name=PRINTF \
	Comment=int printf(const char *format, ...);
702	Name=MTRUNI \
	Comment=unsigned int mtruni;
703	Name=MTRINT \
	Comment=int mtrint;
704	Name=MTRBUF \
	Comment=char mtrbuf[MTRBUF_SIZ];
705	Name=GRPNUM \
	Comment=int *grpnum;
706	Name=MXBAUD \
	Comment=unsigned mxbaud[];
707	Name=GRTYPE \
	Comment=char grtype[NGROUPS];
708	Name=MTRETV \
	Comment=int mtretv;
709	Name=WHOMON \
	Comment=int whomon;
710	Name=FTFTCK \
	Comment=unsigned int ftftck;
711	Name=FTSCOPE \
	Comment=void (*ftscope)();
712	Name=STPANS \
	Comment=char *stpans(char *str);
713	Name=UACOFF \
	Comment=struct usracc *uaptr=uacoff(unum);
714	Name=HICHP1 \
	Comment=int hichp1;
715	Name=CHANTY \
	Comment=char chanty[NGROUPS];
716	Name=CHANTN \
	Comment=char *chantn[]={'IPXD','IPXV','SPX'};
717	Name=NUMCAT \
	Comment=int numcat;
718	Name=SYSKEY \
	Comment=char *syskey;
719	Name=CHGTIME \
	Comment=char *chgtime;
720	Name=MMUATR \
	Comment=char *mmuatr;
721	Name=ANSDIM \
	Comment=char *ansdim;
722	Name=VISPSW \
	Comment=int vispsw;
724	Name=MAXCAT \
	Comment=int maxcat;
725	Name=SVRATE \
	Comment=int svrate;
726	Name=DFTINJ \
	Comment=void dftinj(void);
727	Name=NOALEN \
	Comment=int noalen(char *stg);
728	Name=SKPANS \
	Comment=char *skpans(char *stg);
729	Name=INSDBZ \
	Comment=void insdbz(void);
730	Name=MNUDNL \
	Comment=int mnudnl;
731	Name=CHMOD \
	Comment=int chmod(const char *filename, int permiss);
732	Name=STARTV \
	Comment=char *startv[NGROUPS];
733	Name=NGLOBS \
	Comment=int nglobs;
734	Name=GLOBS \
	Comment=int (*globs[GLBMAX])();
735	Name=HDLCON \
	Comment=void (*hdlcon)();
736	Name=BCC286_EXE \
	Comment=
737	Name=_8087 \
	Comment=int _RTLENTRY _EXPDATA  _8087 = 3;
738	Name=FSTAT \
	Comment=int fstat(int handle, struct stat *buff);
739	Name=OLDINEDIT \
	Comment=int oldinedit(int usn, int (*exipnt)());
740	Name=STAHDL \
	Comment=int stahdl;
741	Name=BB \
	Comment=struct btvblk *bb;
742	Name=GDEDCRD \
	Comment=int enuf=gdedcrd(char *userid, long amount, int real, int asmuch);
743	Name=NTSTCRD \
	Comment=int enuf=ntstcrd(char *userid, long amount, int real);
744	Name=LTSTCRD \
	Comment=int enuf=ltstcrd(struct usracc *uptr, long amount, int real);
745	Name=GTSTCRD \
	Comment=int enuf=gtstcrd(char *userid, long amount, int real);
746	Name=UHSKEY \
	Comment=int uhskey(char *uid,char *lock);
747	Name=UHSMKEY \
	Comment=int uhsmkey(char *uid,int mnum);
748	Name=HDLC25 \
	Comment=void (*hdlc25)();
749	Name=HDLNRG \
	Comment=void (*hdlnrg)();
750	Name=NCHANS \
	Comment=int nchans;
752	Name=GOMVEC \
	Comment=int (*gomvec)();
753	Name=TXTVARS \
	Comment=structure txtvar { char name[TVRSIZ], char *(*varrou)() } *txtvars;
754	Name=STRNICMP \
	Comment=int strnicmp(const char *str1, const char *str2, size_t maxlen);
755	Name=REGISTER_PSEUDOK \
	Comment=int register_pseudok(char *pskbeg,int (*pskrou)(int unum,char *lock));
756	Name=SCNPSK \
	Comment=int scnpsk(int unum,char *lock);
757	Name=GENBB \
	Comment=BTVFILE *genbb;
758	Name=DELGEN \
	Comment=void delgen(char *userid);
759	Name=OKBDAY \
	Comment=int okbday(char *stg);
760	Name=NLINGO \
	Comment=int nlingo;
761	Name=CLINGO \
	Comment=int clingo;
762	Name=LANGUAGES \
	Comment=struct lingo **languages;
763	Name=LNGFND \
	Comment=int lngfnd(char *lngnam);
764	Name=CHGSPK \
	Comment=int chgspk(int lgo,char *spoken);
765	Name=CHGPRT \
	Comment=int chgprt(int lgo,char *protoc);
766	Name=ALG1ST \
	Comment=void alg1st(int lgo);
767	Name=ALGNXT \
	Comment=int algnxt(void);
768	Name=TFSTATE \
	Comment=int tfstate;
769	Name=TFSBUF \
	Comment=char tfsbuf[MAXTFS]
770	Name=TFSPST \
	Comment=char *tfspst;
771	Name=TFSFB \
	Comment=struct fndblk tfsfb;
772	Name=TFSFP \
	Comment=FILE *tfsfp;
773	Name=TFSOPN \
	Comment=int nfiles=tfsopn(char *filespec);
774	Name=TFSRDL \
	Comment=int tfs=tfsrdl()
775	Name=TFSPFX \
	Comment=int found=tfspfx(char *prefix);
776	Name=TFSDPR \
	Comment=void tfsdrp()
777	Name=HDLRNG \
	Comment=void (*hdlrng)();
778	Name=HDLCNC \
	Comment=int (*hdlcnc)();
779	Name=PRFBUFFERS \
	Comment=char *prfbuffers;
780	Name=PRFPOINTERS \
	Comment=char **prfpointers;
781	Name=LINUSE \
	Comment=char *linuse;
782	Name=INIMLT \
	Comment=void inimlt(unsigned pbsize);
783	Name=CLRMLT \
	Comment=void clrmlt();
784	Name=CKLONL \
	Comment=void cklonl(void);
785	Name=OUTMLT \
	Comment=void outmlt(int chan);
786	Name=PRFMLT \
	Comment=void prfmlt(int msgno,...);
787	Name=PMLT \
	Comment=void pmlt(char *ctlstg,...);
788	Name=MLTFLG \
	Comment=int mltflg;
789	Name=GETGEN \
	Comment=int getgen(struct bbsgen *genbuf,char *userid);
790	Name=SETGEN \
	Comment=void setgen(struct bbsgen *genbuf);
791	Name=GENBUF \
	Comment=struct bbsgen genbuf;
792	Name=CNCLNG \
	Comment=int cnclng(void);
793	Name=MAXCAND \
	Comment=char maxcand;
794	Name=LNGLIST \
	Comment=void lnglist(int all);
795	Name=DSPMLT \
	Comment=int dspmlt(msgno,parm1,parm2,parm3);
796	Name=BADLANG \
	Comment=int badlang;
797	Name=POSLNG \
	Comment=char *poslng;
798	Name=AUSTIM \
	Comment=unsigned *austim;
799	Name=NUMCAND \
	Comment=int numcand;
800	Name=FSTCAND \
	Comment=int fstcand;
801	Name=AUSWAIT \
	Comment=unsigned auswait;
802	Name=NUMAUS \
	Comment=int numaus;
803	Name=LNGFOOT \
	Comment=void lngfoot(int all);
804	Name=INIAUS \
	Comment=void iniaus(void);
805	Name=REGAUTSNS \
	Comment=void regautsns(AUTOSENSE *aushdl);
806	Name=BGNAUS \
	Comment=int bgnaus(int foreal);
807	Name=PRCAUS \
	Comment=int prcaus(void);
808	Name=SETBYPROT \
	Comment=void setbyprot(char *prot,char value);
809	Name=CNTCAND \
	Comment=int cntcand(void);
810	Name=LNGPOSN \
	Comment=int lngposn(int chc);
811	Name=ECHSEC \
	Comment=void echsec(char c, int width);
812	Name=SECCHR \
	Comment=char secchr;
813	Name=SAMEND \
	Comment=int samend(char *longs,char *ends);
814	Name=FGETSTG \
	Comment=int fgetstg(char *stg,int n,FILE *stream);
815	Name=GETDFT \
	Comment=char getdft(void);
816	Name=UIDARR \
	Comment=struct uidisp *uidarr;
817	Name=PMCARE \
	Comment=char pmcare;
818	Name=PMVALU \
	Comment=char pmvalu;
819	Name=HDLPMU \
	Comment=void (*hdlpmu)(void);
820	Name=ISPVIS \
	Comment=int ispvis(struct ftfpsp *ftp);
821	Name=FTHEAD \
	Comment=struct ftfpsp *fthead;
822	Name=FPRLOCK \
	Comment= char *fprlock;
823	Name=ARCDSC \
	Comment=char *arcdsc[];
824	Name=LINGYN \
	Comment=char lingyn(char c);
825	Name=EXTPTR \
	Comment=struct extusr *extptr;
826	Name=OTHEXP \
	Comment=struct extusr *othexpi;
827	Name=EXTOFF \
	Comment=struct extusr *exptr=extoff(unum);
828	Name=KPAK \
	Comment=long kpak[NGROUPS];
829	Name=KSEC \
	Comment=long ksec[NGROUPS];
830	Name=KCHAR \
	Comment=long kchar[NGROUPS];
831	Name=ECHTYP \
	Comment=char echtyp[NGROUPS];
832	Name=ALCTILE \
	Comment=void *bigregion=alctile(unsigned qty, unsigned sizblock);
833	Name=PTRTILE \
	Comment=void *block=ptrtile(void *bigregion, unsigned unum);
834	Name=MKTEMP \
	Comment=char *mktemp(char *template);
835	Name=CHDIR \
	Comment=int chdir(const char *path);
836	Name=GETCURDIR \
	Comment=int getcurdir(int drive, char *direc);
837	Name=MEMCHR \
	Comment=void *memchr(const void *s, int val, size_t n);
838	Name=STPCPY \
	Comment=char *stpcpy(char *dest, const char *src);
839	Name=STRNSET \
	Comment=char *strnset(char *str, int ch, size_t n);
840	Name=STRSET \
	Comment=char *strset(char *str, int ch);
841	Name=CREAT \
	Comment=int creat(const char *filename, int permiss);
842	Name=FCLOSEALL \
	Comment=int fcloseall(void);
843	Name=FREOPEN \
	Comment=FILE *freopen(const char *filename, const char *mode, FILE *stream );
844	Name=_FSOPEN \
	Comment=FILE *_fsopen(const char *filename, char *type, int shflag);
845	Name=MEMCCPY \
	Comment=void *memccpy(void *dst, const void *src, int val, size_t n);
846	Name=MEMICMP \
	Comment=int memicmp(const void *s1, const void *s2, size_t n);
847	Name=MOVEDATA \
	Comment=void movedata(unsigned srcseg, unsigned srcoff, unsigned dstseg, unsigned dstoff, size_t n);
848	Name=DUP \
	Comment=int dup(int handle);
859	Name=DUP2 \
	Comment=int dup2(int oldhandle, int newhandle);
850	Name=ACCESS \
	Comment=int access(const char *filename, int amode);
860	Name=PFNPTR \
	Comment=char *pfnptr;
861	Name=NTVARS \
	Comment=int ntvars;
862	Name=HRTVAL \
	Comment=unsigned long tix64k=hrtval();
863	Name=GOODPTR \
	Comment=int goodptr(void *ptr);
864	Name=GOODSTG \
	Comment=int goodstg(char *ptr);
865	Name=LISTINGQ \
	Comment=void listingq(char *path, int msgno);
866	Name=READ \
	Comment=
867	Name=WRITE \
	Comment=int write(int handle, const void *buf, unsigned nbyte);
868	Name=DISASTER \
	Comment=jmp_buf disaster;
869	Name=RIPDFD \
	Comment=int ripdfd;
870	Name=RIPIDX \
	Comment=int ripidx;
871	Name=AUTSCNS \
	Comment=char ***autscns;
872	Name=LGRFNT \
	Comment=char *lgrfnt[];
873	Name=LGRSTY \
	Comment=char *lgrsty[];
874	Name=SMRFNT \
	Comment=*char smrfnt[];
875	Name=SMRSTY \
	Comment=char *smrsty[];
878	Name=FSDRHD \
	Comment=void fsdrhd (char *titl);
879	Name=ALCBLOK \
	Comment=void *alcblok(unsigned qty,unsigned size);
880	Name=PTRBLOK \
	Comment=void *ptrblok(void *bigptr,unsigned index);
881	Name=FLDPTR \
	Comment=struct fsdfld *fldptr;
882	Name=SHOFLD \
	Comment=void shofld(int attr, int justfy);
883	Name=STRRCHR \
	Comment=char *strrchr(const char *str, int c);
884	Name=F_SPUSH \
	Comment=
886	Name=COMMAS \
	Comment=char *commas(char *intstg);
887	Name=INITASK \
	Comment=int initask(void (*tskaddr)(int taskid));
888	Name=MFYTASK \
	Comment=void mfytask(int taskid,void (*tskaddr)(int taskid));
889	Name=SNDRST \
	Comment=int sndrst;
890	Name=DETFLG \
	Comment=int detflg;
891	Name=RIPMB \
	Comment=FILE *ripmb;
892	Name=TFSABT \
	Comment=void tfsabt();
893	Name=FNROOT \
	Comment=char *fnroot(char *fulpth);
894	Name=FNWEXT \
	Comment=char *fnwext(char *fulpth);
895	Name=RSVNAM \
	Comment=int rsvnam(char *name);
896	Name=GETFTIME \
	Comment=int getftime(int handle, struct ftime *ftimep);
897	Name=SETFTIME \
	Comment=int setftime(int handle, struct ftime *ftimep);
898	Name=CLSIZE \
	Comment=unsigned clbyts=clsize(int drive);
899	Name=DRVNUM \
	Comment=int drive=drvnum(char *path);
900	Name=CLFIT \
	Comment=long realsiz=clfit(long siz, unsigned clbyts);
901	Name=NUMBYTP \
	Comment=long numbytp;
902	Name=HDEDCRD \
	Comment=long hdedcrd(struct usracc *uptr,long amt,int real,int asmuch);
903	Name=PTHOPT \
	Comment=char *pthopt(int msgnum);
904	Name=RLENBTV \
	Comment=int rlenbtv (void);
905	Name=STZCAT \
	Comment=char *stzcat(char *dst,char *src,int num);
906	Name=AINSCB \
	Comment=struct ainscb *ainscb;
907	Name=AINBEG \
	Comment=void ainbeg(void);
908	Name=AINCHR \
	Comment=int ainchr(char c);
909	Name=VERSION \
	Comment=char version[];
910	Name=SELENG \
	Comment=
911	Name=SYSLOD \
	Comment=unsigned syslod;
912	Name=KYSBUF \
	Comment=char *kysbuf;
913	Name=ANPBTVL \
	Comment=int anpbtv (void *recptr, int anpopt);
914	Name=SV3 \
	Comment=struct sysvb3 sv3;
915	Name=FTGDN1 \
	Comment=int ftgdn1(char *prot, void (*retrou)())
916	Name=ALWAIT \
	Comment=char alwait;
917	Name=__BASE \
	Comment=unsigned __base;
918	Name=__TOP \
	Comment=unsigned __top;
919	Name=__HINCR \
	Comment=unsigned __hincr;
920	Name=VALEXI \
	Comment=int valexi;
921	Name=AGENTS \
	Comment=struct agent {...} *agents;
922	Name=MSYSID \
	Comment=char msysid[SIDSIZ];
923	Name=RQDPTR \
	Comment=struct reqdat {...} *rqdptr;
924	Name=MRQSIZ \
	Comment=int mrqsiz;
925	Name=MRQPTR \
	Comment=char *mrqptr;
926	Name=GREQID \
	Comment=int greqid;
927	Name=RSPTMP \
	Comment=char *rsptmp;
928	Name=NAGENTS \
	Comment=int nagents;
929	Name=GDPBB \
	Comment=BTVFILE *gdpbb;
930	Name=REGISTER_AGENT \
	Comment=void register_agent(struct agent *agdptr);
931	Name=HOOK_CONNECT \
	Comment=void hook_connect(void (*conrou)(void));
932	Name=HOOK_DISCONNECT \
	Comment=void hook_disconnect(void (*dscrou)(void));
933	Name=HOOK_CLEANUP \
	Comment=void hook_cleanup(void (*mcurou)(void));
934	Name=HOOK_DELACCT \
	Comment=void hook_delacct(void (*dlarou)(char *userid));
935	Name=HOOK_SHUTDOWN \
	Comment=void hook_shutdown(void (*finrou)(void));
936	Name=CURCSU \
	Comment=void curcsu(int chan);
937	Name=CURREQ \
	Comment=void curreq(int reqid);
938	Name=RSP2READ \
	Comment=void rsp2read(struct saunam *name,unsigned length,void *value);
939	Name=OK2WRITE \
	Comment=void ok2write(char *filespec);
940	Name=RSP2WRITE \
	Comment=void rsp2write(BOOL ok,unsigned length,void *data);
941	Name=STDCHK \
	Comment=BOOL stdchk(char *key);
942	Name=REJECTREQ \
	Comment=void rejectreq(void);
943	Name=SENDDPK \
	Comment=void senddpk(int chan,char *dstapp,int priority,struct saunam *dpknam, unsigned length,void *value);
944	Name=QROOM \
	Comment=BOOL qroom(int chan,int priority);
945	Name=DCLMRQ \
	Comment=void dclmrq(int minsiz);
946	Name=MRQOFF \
	Comment=char *mrqoff(int reqid);
947	Name=CYCLEME \
	Comment=void cycleme(void (*cycaddr)(void));
948	Name=READGDP \
	Comment=int  readgdp(int direction,struct saunam *name,unsigned length,void *dest);
949	Name=WRITEGDP \
	Comment=void writegdp(struct saunam *name,unsigned length,void *value);
950	Name=NEWARR \
	Comment=int newarr(int incsiz,unsigned elemsiz);
951	Name=ADD2ARR \
	Comment=void *add2arr(int arrhdl,void *newelem);
952	Name=ARRBAS \
	Comment=void *arrbas(int arrhdl);
953	Name=NINARR \
	Comment=int ninarr(int arrhdl);
954	Name=ARRELEM \
	Comment=void *arrelem(int arrhdl,int index);
955	Name=SAMPKY \
	Comment=char *sampky;
956	Name=SAMPLN \
	Comment=int sampln;
957	Name=R2RPRF \
	Comment=void r2rprf(struct saunam *name);
958	Name=R2WPRF \
	Comment=void r2wprf(BOOL ok);
959	Name=STLCPY \
	Comment=char *stlcpy(char *dst,char *src,unsigned num);
960	Name=STP4CS \
	Comment=char *stp4cs(char *buf);
961	Name=SAMEPATU \
	Comment=BOOL samepatu(char *sau1,char *sau2,BOOL exact);
962	Name=SGNUSZ \
	Comment=int sgnusz
963	Name=FULALW \
	Comment=int fulalw;
964	Name=NAMDFT \
	Comment=int namdft;
965	Name=SETPFN \
	Comment=void (*setpfn)(char *inp);
966	Name=VALUID \
	Comment=int valuid(char *stg);
967	Name=B2CCPY \
	Comment=void b2ccpy(char *dest,char *src,unsigned length);
968	Name=C2BCPY \
	Comment=void c2bcpy(char *dest,char *src,unsigned length);
969	Name=MORSUP \
	Comment=int morsup(int supstt);
970	Name=ABOSUP \
	Comment=void abosup(int supstt);
971	Name=ENDSUP \
	Comment=void endsup(void);
972	Name=GCSPLON \
	Comment=void gcsplon(void);
973	Name=CNVD2S \
	Comment=BOOL cnvd2s(char *saustg, struct saunam *saunam);
974	Name=CNVS2D \
	Comment=char *cnvs2d(struct saunam *saunam);
975	Name=CSBUMP \
	Comment=int csbump(int logon);
976	Name=SUPDFTS \
	Comment=void supdfts(void);
977	Name=FORREAL \
	Comment=BOOL forreal(void);
978	Name=GCS2CS \
	Comment=void gcs2cs(void);
979	Name=XITMOD \
	Comment=BOOL xitmod(void);
980	Name=DFTANS \
	Comment=void dftans(char dft);
981	Name=R2RGDP \
	Comment=void r2rgdp(int direction, struct saunam *dpknam);
983	Name=MMAPPID \
	Comment=char *mmappid;
984	Name=SUPAPPID \
	Comment=char *supappid;
985	Name=RNOSID \
	Comment=char *rnosid(char *regno);
989	Name=MENUPG \
	Comment=struct mnupag {...} *menupg;
990	Name=SAVEPAGE \
	Comment=void savepage(struct mnupag *menupage,BOOL insert);
991	Name=UNPACK \
	Comment=void unpack(struct mnupag *menupage);
992	Name=REPACK \
	Comment=void repack(struct mnupag *menupage);
993	Name=UIDXST \
	Comment=BOOL uidxst(char *uid);
994	Name=BXABTV \
	Comment=void bxabtv(int loktyp);
995	Name=EXABTV \
	Comment=void exabtv(void);
996	Name=GETBTVL \
	Comment=void getbtvl (void *recptr, void *key, int keynum, int getopt, int loktyp);
997	Name=OBTBTVL \
	Comment=int obtbtvl (void *recptr, void *key, int keynum, int obtopt, int loktyp);
998	Name=ANPBTVLK \
	Comment=int anpbtvlk (void *recptr, int chkcas, int anpopt, int loktyp);
999	Name=GABBTVL \
	Comment=void gabbtv (void *recptr, long abspos, int keynum);
1000	Name=SWBUFS \
	Comment=unsigned swbufs(struct datstm far *dsp);
1001	Name=HOBUFS \
	Comment=void hobufs(struct datstm far *dsp, char byte);
1002	Name=DMBUFS \
	Comment=void dmbufs(struct datstm far *dsp, unsigned nactual);
1003	Name=MVIAD \
	Comment=unsigned mviad(struct datstm far *dsp, char far *srcloc, unsigned nwant);
1004	Name=HVIAD \
	Comment=void hviad(struct datstm far *dsp, char byte);
1005	Name=HDLRST \
	Comment=void (*hdlrst)();
1006	Name=BBSFVC \
	Comment=int bbsfvc(char *chtype);
1008	Name=BBSDSC \
	Comment=void bbsdsc(int unum);
1009	Name=MXMSSZ \
	Comment=unsigned mxmssz;
1010	Name=DOS_CLOSE \
	Comment=unsigned _dos_close(int handle);
1011	Name=DOS_OPEN \
	Comment=unsigned _dos_open(const char *pathname, unsigned oflag, int *handle);
1012	Name=SETMODE \
	Comment=int setmode(int handle, int mode);
1013	Name=FTIME \
	Comment=void ftime(struct timeb *TimeStructPtr);
1014	Name=SCANCH \
	Comment=unsigned scanch(char *bytes,char target,int limit);
1015	Name=GLOBALGO \
	Comment=int globalgo(void);
1016	Name=PRFASC \
	Comment=void prfasc();
1017	Name=DFTUID \
	Comment=int dftuid(char *userid);
1020	Name=LNGSWT \
	Comment=int lngswt(void);
1021	Name=MONAME \
	Comment=char moname[][4];
1022	Name=NCUDNT \
	Comment=char *ncudnt(int date,int time);
1023	Name=CHKUID \
	Comment=int (*chkuid)(char *userid);
1024	Name=RELOG \
	Comment=void relog(void);
1025	Name=DECUSR \
	Comment=void (*decusr)(void);
1026	Name=DECUSN \
	Comment=int decusn;
1027	Name=DECUSP \
	Comment=struct user *decusp;
1028	Name=DECUAP \
	Comment=struct usracc *decuap;
1029	Name=DECCST \
	Comment=long deccst;
1030	Name=DECDFT \
	Comment=void decdft(void);
1031	Name=DECLOG \
	Comment=int declog(void);
1032	Name=DECSUP \
	Comment=int decsup(void);
1033	Name=DECTDY \
	Comment=int dectdy(void);
1034	Name=DECCAL \
	Comment=int deccal(void);
1035	Name=DEC15S \
	Comment=void dec15s(void);
1036	Name=DECCRD \
	Comment=void deccrd(long surdsc);
1037	Name=LONAUD \
	Comment=int lonaud;
1038	Name=LONCDI \
	Comment=void (*loncdi)();
1039	Name=FNEXT \
	Comment=char *fnext(char *fulpth);
1040	Name=UL2AS \
	Comment=char *ul2as(unsigned long ulongin);
1041	Name=STRSTP \
	Comment=char *strstp(char *str,char ch);
1042	Name=MEMSTP \
	Comment=int memstp(char *block,int nbytes,char byt);
1043	Name=MKDOSN \
	Comment=char *mkdosn(char *string);
1044	Name=UNTAG \
	Comment=void untag(int tagnum);
1045	Name=NUMFTG \
	Comment=void numftg(int newnum);
1046	Name=RMVTAG \
	Comment=void rmvtag(char *untcmd);
1048	Name=SYSCYC \
	Comment=void (*syscyc)(void);
1049	Name=CHNCYC \
	Comment=void (*chncyc)(void);
1050	Name=LSTUNM \
	Comment=int lstunm;
1051	Name=NEWUNM \
	Comment=int newunm;
1052	Name=FIRSTWD \
	Comment=char *firstwd(char *string);
1053	Name=NEXTWD \
	Comment=char *nextwd(void);
1054	Name=RCDBAUD \
	Comment=void rcdbaud(long baud);
1055	Name=SHOMAL \
	Comment=void shomal(void);
1056	Name=GRTSUB \
	Comment=char *grtsub[];
1057	Name=NUMCDI \
	Comment=int numcdi(char *chtype);
1058	Name=HDLRLG \
	Comment=void (*hdlrlg)();
1059	Name=LNGTCK \
	Comment=unsigned long lngtck;
1060	Name=HDLZAP \
	Comment=void (*hdlzap)();
1061	Name=TFCCHG \
	Comment=long tfcchg(long nbytes,long credpk);
1062	Name=SYSTEM \
	Comment=static int near pascal system(char far *ROM, char *Copyright);
1063	Name=SPAWNL \
	Comment=int spawnl(int modeF,const char *pathP, const char *arg0, const char *arg1, ..., const char *argn, NULL);
1064	Name=ERRNO \
	Comment=int *__errno (void);
1065	Name=NUMONL \
	Comment=int numonl(int state);
1066	Name=FSDCHI \
	Comment=char fsdchi(int chan, int c);
1067	Name=HDLGPR \
	Comment=void (*hdlgpr)(char *);
1068	Name=ACTDET \
	Comment=int actdet;
1069	Name=STRRPL \
	Comment=char *strrpl(char *str,char och,char nch);
1070	Name=DELDIR \
	Comment=int deldir(char *dirpath);
1071	Name=CNTDIRS \
	Comment=void cntdirs(char *path);
1072	Name=NUMDIRS \
	Comment=long numdirs;
1073	Name=DELDIRERR \
	Comment=extern char deldirerr[];
1074	Name=OUTATA \
	Comment=int outata;
1075	Name=HDLSMP \
	Comment=int (*hdlsmp)();
1076	Name=CHKACC \
	Comment=int (*chkacc)(void);
1077	Name=CHKPSW \
	Comment=int (*chkpsw)(char *psword);
1078	Name=CNCBGW \
	Comment=char *cncbgw(char *buffer,int sizbuf);
1079	Name=NINGRP \
	Comment=int ningrp(int group);
1080	Name=BEG_PHASE \
	Comment=void (*beg_phase)(char *name,long num);
1081	Name=END_PHASE \
	Comment=void (*end_phase)(char *name,long num);
1082	Name=RPTPHS \
	Comment=void rptphs(FILE *fp);
1083	Name=PSTPHS \
	Comment=struct phasedbg *pstphs(int index);
1084	Name=UNIQFN \
	Comment=char *uniqfn(char *fspec);
1085	Name=SDLLINFO \
	Comment=void sdllinfo(FILE *dst);
1086	Name=SHOSTACK \
	Comment=void shostack(FILE *dst,char *ptr,int rows,int ibpval);
1087	Name=SFTRAK \
	Comment=char *sftrak;
1088	Name=SLTRAK \
	Comment=int sltrak;
1089	Name=MXBAUDL \
	Comment=unsigned mxbaud[];
1090	Name=TFSPTH \
	Comment=
1091	Name=MDMATZ \
	Comment=char *mdmatz[NGROUPS];
1092	Name=MDMBSY \
	Comment=char *mdmbsy[NGROUPS];
1093	Name=MDMNAN \
	Comment=char *mdmnan[NGROUPS];
1094	Name=KEYSBB \
	Comment=BTVFILE *keysbb;
1095	Name=GLOBGO \
	Comment=int globgo;
1096	Name=MEMDBGRPT \
	Comment=void memdbgrpt(FILE *fp);
1097	Name=CKSUM8 \
	Comment=unsigned char cksum8(unsigned char *stg, int nbytes);
1098	Name=CKSUM16 \
	Comment=unsigned int cksum16(unsigned int *stg, int nwords);
1099	Name=MEMDBG \
	Comment=int memdbg;
1100	Name=AABBTVL \
	Comment=int aabbtvl (void *recptr, long abspos, int keynum, int loktyp);
1101	Name=STPBTVL \
	Comment=int stpbtvl (void *recptr, int stpopt, int loktyp);
1102	Name=UNLBTV \
	Comment=void unlbtv (long abspos, int keynum);
1103	Name=WSLBTV \
	Comment=int wslbtv (void);
1104	Name=ISWRITE \
	Comment=BOOL iswrite(void);
1105	Name=CRC16 \
	Comment=unsigned int crc16(unsigned char *stg, int nbytes);
1106	Name=CRC32 \
	Comment=unsigned long crc32(unsigned char *stg, int nbytes);
1107	Name=ASUPQ \
	Comment=char *asupq[NMQSTS];
1108	Name=SUPHDR \
	Comment=char *suphdr;
1109	Name=SUPEND \
	Comment=char *supend;
1110	Name=SUPFRM \
	Comment=int supfrm;
1111	Name=SAVUSR \
	Comment=void savusr(char *answers0);
1112	Name=B2CCVT \
	Comment=char *b2ccvt(char *str,int bufsiz);
1113	Name=C2BCVT \
	Comment=char *c2bcvt(char *str,int bufsiz);
1114	Name=PAGEROU \
	Comment=int (*pagerou)();
1115	Name=CSPAGEROU \
	Comment=int (*cspagerou)();
1116	Name=GLBKEY \
	Comment=char *glbkey;
1117	Name=GPAGINT \
	Comment=int gpagint;
1118	Name=PAGESET \
	Comment=int (*pageset)();
1119	Name=NRECCL \
	Comment=int nreccl
1120	Name=SYSREC \
	Comment=int sysrec;
1121	Name=RECENTS \
	Comment=struct recalls *recents;
1122	Name=LANGCHG \
	Comment=char *langchg;
1123	Name=FULLPATH \
	Comment=char *_fullpath(char *buffer, const char * pathname, size_t maxlen);
1124	Name=NORMSPEC \
	Comment=char *normspec(char *dest,char *src);
1125	Name=FPUTS \
	Comment=int fputs(const char *string, FILE *stream);
1126	Name=GMKDIR \
	Comment=void gmkdir(char *dirnam);
1127	Name=FILNPART \
	Comment=char *filnpart(char *filespec);
1128	Name=PATHPART \
	Comment=char *pathpart(char *filespec);
1129	Name=STDMCHK \
	Comment=BOOL stdmchk(int mnum);
1130	Name=INCUSR \
	Comment=int incusr(int unum,BOOL iginv,BOOL inccur);
1131	Name=AXSCHG \
	Comment=void axschg(char *uid);
1132	Name=CENTURY \
	Comment=int century;
1133	Name=V2DDAT \
	Comment=int v2ddat(double vbdat);
1134	Name=V2DTIM \
	Comment=int v2dtim(double vbdat);
1135	Name=V2SDAT \
	Comment=char *v2sdat(double vbdat);
1136	Name=V2STIM \
	Comment=char *v2stim(double vbdat);
1137	Name=D2VDAT \
	Comment=double d2vdat(int dosdat,int dostim);
1138	Name=S2VDAT \
	Comment=double s2vdat(char *stgdat,char *stgtim);
1139	Name=INFSD \
	Comment=int infsd(int usn, void (*exipnt)());
1140	Name=PSMATMS \
	Comment=void psmatms(char *pagmsg);
1141	Name=SPAGESET \
	Comment=void (*spageset)();
1142	Name=STLCAT \
	Comment=char *stlcat(char *dst,char *src,unsigned num);
1143	Name=REFLOW \
	Comment=void reflow(char *buf);
1144	Name=NAMTMP \
	Comment=struct saunam *namtmp;
1145	Name=ITEMIDXD \
	Comment=char *itemidxd(char *ctlstg,int index,char *delim);
1146	Name=ITEMIDX \
	Comment=char *itemidx(char *ctlstg,int index);
1147	Name=ITEMCNTD \
	Comment=int itemcntd(char *ctlstg,char *delim);
1148	Name=ITEMCNT \
	Comment=int itemcnt(char *ctlstg);
1149	Name=DOVECS \
	Comment=void dovecs(int vechdl);
1150	Name=CONHDL \
	Comment=int conhdl;
1151	Name=DSCHDL \
	Comment=int dschdl;
1152	Name=MCUHDL \
	Comment=int mcuhdl;
1153	Name=DLAHDL \
	Comment=int dlahdl;
1154	Name=FINHDL \
	Comment=int finhdl;
1155	Name=FFINHDL \
	Comment=int ffinhdl;
1156	Name=HOOK_FINALSHUTDOWN \
	Comment=void hook_finalshutdown(void (*ffinrou)(void));
1157	Name=TMPNAM \
	Comment=char *tmpnam(char *s);
1158	Name=CSVCRR \
	Comment=int csvcrr;
1159	Name=FIXPTH \
	Comment=void fixpth(char *path);
1160	Name=UDWRAP \
	Comment=int udwrap;
1161	Name=SHORTM \
	Comment=int shortm;
1162	Name=PFCEIL \
	Comment=int pfceil;
1163	Name=S2AAHDL \
	Comment=int s2aahdl;
1164	Name=S2CSHDL \
	Comment=int s2cshdl;
1165	Name=HOOK_SWT2AA \
	Comment=void hook_swt2aa(void (*s2aarou)(void));
1166	Name=HOOK_SWT2CS \
	Comment=void hook_swt2cs(void (*s2csrou)(void));
1167	Name=NEWPOOL \
	Comment=int newpool(unsigned areasiz, int nareas, int ninmem); 
1168	Name=RSVAREA \
	Comment=int rsvarea(int poolhdl);
1169	Name=UNRAREA \
	Comment=void unrarea(int poolhdl, int areahdl);
1170	Name=HOOK_ANNOUNCE \
	Comment=void hook_announce(void (*annorou)(void));
1171	Name=ADDANNOM \
	Comment=void addannom(char *message,char *appid,char *cmdstg);
1172	Name=ADDANNO \
	Comment=void addanno(char *message);
1173	Name=ANNOHDL \
	Comment=int annohdl;
1174	Name=DCLANNO \
	Comment=void dclanno(int size);
1175	Name=ANNOMEM \
	Comment=char *annomem;
1176	Name=ABSDTDY \
	Comment=bool absdtdy(void);
1177	Name=ISMYREQ \
	Comment=bool ismyreq(int reqid,char *appid);
1178	Name=GNUMDB \
	Comment=int gnumdb(char *mdfnam);
1179	Name=CURMBK \
	Comment=FILE *curmbk;
1180	Name=BBSCON \
	Comment=int bbscon(int unum);
1181	Name=EDTPFN \
	Comment=void (*edtpfn)(int pfnlvl);
1182	Name=HANGUPS \
	Comment=void (*hangups)();
1183	Name=MSTSCAN \
	Comment=char *mstscan(char *msgfil,char *vblnam,int maxsiz);
1184	Name=SNUMDB \
	Comment=void snumdb(char *mdfnam,int ndbfils);
1185	Name=INFSDHUP \
	Comment=bool infsdhup;
1186	Name=FOPAVL \
	Comment=int fopavl;
1187	Name=ACNMB \
	Comment=FILE *acnmb;
1188	Name=SETBBYE \
	Comment=void setbbye(void);
1189	Name=SCNMDF \
	Comment=char *scnmdf(char *mdfnam,char *linpfx);
1190	Name=MDFODMD \
	Comment=char *mdfodmd(char *mdfnam);
1191	Name=BGNEDT \
	Comment=int (*bgnedt)();
1192	Name=EDTIMR \
	Comment=void (*edtimr)(int (*imradr)());
1193	Name=ISFXVAL \
	Comment=bool isfxval(unsigned *result, char *str);
1194	Name=LSFXVAL \
	Comment=bool lsfxval(unsigned long *result, char *str);
1195	Name=RSPTIM \
	Comment=unsigned long rsptim;
1196	Name=VALLON \
	Comment=BOOL (*vallon)(void);
1197	Name=BYENDL \
	Comment=void byendl();
1198	Name=STRINS \
	Comment=char * strins(char *dststg, char *insstg, int sizdst);
1199	Name=USRFLAGS \
	Comment=void usrflags(void);
1200	Name=OPNBTVL \
	Comment=BTVFILE *opnbtvl (char *filnam, int maxlen, char *owner);
1201	Name=NMALLOC \
	Comment=unsigned long nmalloc;
1202	Name=NMSKIP \
	Comment=unsigned long nmskip;
1203	Name=NMSCTR \
	Comment=unsigned long nmsctr;
1204	Name=NMSPEC \
	Comment=unsigned long nmspec;
1205	Name=NMBUST \
	Comment=unsigned long nmbust;
1206	Name=NMLINR \
	Comment=unsigned long nmlinr;
1207	Name=NMFREE \
	Comment=unsigned long nmfree;
1208	Name=LSTALCPHS \
	Comment=
1209	Name=LSTALCSIZ \
	Comment=
1210	Name=GOODCPTR \
	Comment=int goodcptr(void *ptr);
1211	Name=ALCDBG \
	Comment=int alcdbg;
1212	Name=ASTMODE \
	Comment=int astmode;
1213	Name=GALASTFAIL \
	Comment=void galastfail(char *filinf, unsigned long linnum, char *message);
1214	Name=ASTRPTFIL \
	Comment=char *astrptfil;
1215	Name=BTVUPTR \
	Comment=int (*btvuptr)(int funcno,int datbufseg,int keyseg,int keyno,int rlen);
1216	Name=BTVERRPTR \
	Comment=void (*btverrptr)(char *who)
1217	Name=LOCALECONVENTION \
	Comment=struct lconv _localeconvention {... };
1300	Name=CRCTAB \
	Comment=unsigned short crctab[];
1301	Name=CR3TAB \
	Comment=long cr3tab[];
1302	Name=CATRPT \
	Comment=void (*catrpt)(char *filnam);
1303	Name=PLSTAK \
	Comment=void plstak(char *filnam, void *sssp, unsigned int bp);
1304	Name=CATBPSAV \
	Comment=void *catbpsav;
1305	Name=CATACT \
	Comment=int catact;
1306	Name=INEDIT \
	Comment=int (*inedit);
1307	Name=AREAPTR \
	Comment=void *areaptr(int poolhdl, int areahdl);
1308	Name=GLBKEYI \
	Comment=char *glbkeyi;
1309	Name=GOODBLK \
	Comment=unsigned goodblk(void *ptr,unsigned nbytes);
1310	Name=SAPSUP \
	Comment=int sapsup;
1311	Name=SAPPRP \
	Comment=void sapprp(void);
1312	Name=SAPREP \
	Comment=struct sapinf *saprep(int mask);
1313	Name=ISERRF \
	Comment=BOOL (*iserrf)(int chan);
1314	Name=GPIROU \
	Comment=int (*gpirou)(int usn);
1315	Name=LOKNAM \
	Comment=int loknam(char *lokname);
1316	Name=LOW_HASKEY \
	Comment=int low_haskey(char *lock,int unum,struct user *uptr);
1317	Name=CLISRV \
	Comment=int clisrv;
1318	Name=IMDROP \
	Comment=void imdrop(void);
1319	Name=LOCK \
	Comment=int lock(int handle, long ofs, long length);
1320	Name=UNLOCK \
	Comment=int unlock(int handle, long ofs, long length);
1321	Name=LOCALTIME \
	Comment=struct tm *localtime(long *clock);
1322	Name=CHSIZE \
	Comment=int chsize(int fildes, long newSize);
1323	Name=REMOVE \
	Comment=int remove(const char *filename);
1324	Name=OESROU \
	Comment=BOOL (*oesrou)(int unum);
1325	Name=VTMSNDOK \
	Comment=BOOL vtmsndok(int tochan);
1326	Name=VTMSEND \
	Comment=void vtmsend(int srcid, int length, void *value);
1327	Name=SETPFN \
	Comment=void (*setpfn)(char *inp);
1328	Name=WCMATCH \
	Comment=BOOL wcmatch(unsigned char *inpstr, unsigned char *picstg);
1329	Name=SAWCCRS \
	Comment=void sawccrs(void (*hookrou)(void), char *verstg);
1330	Name=ZAPTBL \
	Comment=int *zaptbl;
1331	Name=SAWCLAN \
	Comment=void sawclan(void (*hookrou)(void), char *verstg);
1332	Name=SYSLOAD \
	Comment=int sysload[60];
1333	Name=MAXPOL \
	Comment=unsigned maxpol;
1334	Name=MAXSPD \
	Comment=unsigned maxspd;
1335	Name=OSVERSN \
	Comment=char *osversn(void);
1336	Name=CURDLLS \
	Comment=int curdlls;
1337	Name=BTRSET \
	Comment=char btrset[80];
1338	Name=MULTSK \
	Comment=int multsk;
1339	Name=MULMTH \
	Comment=int mulmth;
1340	Name=SHOCHLHOOK \
	Comment=
1341	Name=HASAXS \
	Comment=static BOOL hasaxs(struct mnupag *page);
1342	Name=TRAVAI \
	Comment=unsigned travai(int chan,int priority);
1343	Name=PHAVAI \
	Comment=unsigned phavai(int chan);
1344	Name=MTRLNG \
	Comment=long mtrlng;
1345	Name=SWTCLSHOOK \
	Comment=
1346	Name=RSYFADHOOK \
	Comment=
